{"ast":null,"code":"import{Box,Center,HStack,Spacer,VStack}from\"@chakra-ui/react\";import React,{useEffect,useRef,useState}from\"react\";import ChatUserList from\"./ChatUserList\";import SenderMessageBubble from\"./SenderMessageBubble\";import ReceiverMessageBubble from\"./ReceiverMessageBubble\";import CreateGroupChatButton from\"./CreateGroupChatButton\";import{TypingAnimation}from\"./commonFunctions\";import ChatUserDetails from\"./ChatUserDetails\";import MyDetails from\"./MyDetails\";import MessageBar from\"./MessageBar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Feed(_ref){let{user,socket}=_ref;const cloudinaryUrl=process.env.REACT_APP_CLOUDINARY_URL;const[chats,setChats]=useState([]);const[activeChat,setActiveChat]=useState(null);const[messages,setMessages]=useState([]);const[connectedUsers,setConnectedUsers]=useState([]);const[notifications,setNotifications]=useState({});const messagesContainerRef=useRef(null);const[typings,setTypings]=useState({});useEffect(()=>{// Scroll to the last message when the component mounts or when activeChat changes\nif(messagesContainerRef.current){messagesContainerRef.current.scrollTop=messagesContainerRef.current.scrollHeight;}},[messages,activeChat,cloudinaryUrl,user]);const handleChats=async newMessage=>{let chatIndex=chats.findIndex(chat=>chat._id===newMessage.chat.toString());if(chatIndex!==-1){const updatedChats=[chats[chatIndex],...chats.slice(0,chatIndex),...chats.slice(chatIndex+1)];updatedChats[0].latestMessage=newMessage;setChats(updatedChats);}else{try{const response=await fetch(\"/chat/\".concat(newMessage.chat),{method:\"POST\",headers:{\"content-type\":\"application/json\",Authorization:user._id}});if(!response.ok)throw new Error(\"Error fetching the chat: \",response);const result=await response.json();setChats(prevChats=>[result,...prevChats]);if(newMessage.sender.toString()!==user._id.toString())setNotifications(prevNotifications=>({...prevNotifications,[newMessage.chat.toString()]:1}));}catch(error){console.log(error);}}};const handleNotification=newMessage=>{const chatId=newMessage.chat.toString();const chatIndex=chats.findIndex(chat=>chat._id===chatId);if(chatIndex!==-1){setNotifications(prevNotifications=>({...prevNotifications,[chatId]:(prevNotifications[chatId]||0)+1}));}};//new message received\nuseEffect(()=>{const handleNewMessageReceived=async newMessage=>{await handleChats(newMessage);if(activeChat&&activeChat._id.toString()===newMessage.chat){setMessages(prevMessages=>[...prevMessages,newMessage]);}else handleNotification(newMessage);};socket.on(\"newMessageReceived\",handleNewMessageReceived);return()=>{socket.off(\"newMessageReceived\",handleNewMessageReceived);};});//connected users\nuseEffect(()=>{const handleConnectedUsers=data=>{setConnectedUsers(data);};socket.on(\"connectedUsers\",handleConnectedUsers);return()=>{socket.off(\"connectedUsers\",handleConnectedUsers);};});//typing\nuseEffect(()=>{const handleTyping=data=>{setTypings(prevTypings=>{const newTypings={...prevTypings};if(newTypings[data.chatId]){const index=newTypings[data.chatId].findIndex(typingUser=>typingUser._id===data.typingUser._id);if(index===-1){newTypings[data.chatId]=[...newTypings[data.chatId],data.typingUser];}else{newTypings[data.chatId][index]=data.typingUser;}}else{newTypings[data.chatId]=[data.typingUser];}return newTypings;});};socket.on(\"typing\",handleTyping);return()=>{socket.off(\"typing\",handleTyping);};});//stopped typing\nuseEffect(()=>{const handleStoppedTyping=data=>{setTypings(prevTypings=>{const newTypings={...prevTypings};if(newTypings[data.chatId]){const index=newTypings[data.chatId].findIndex(user=>user._id===data.typingUser._id);if(index!==-1){newTypings[data.chatId]=[...newTypings[data.chatId].slice(0,index),...newTypings[data.chatId].slice(index+1)];if(newTypings[data.chatId].length===0){delete newTypings[data.chatId];}}}return newTypings;});};socket.on(\"stoppedTyping\",handleStoppedTyping);return()=>{socket.off(\"stoppedTyping\",handleStoppedTyping);};});//get chats\nuseEffect(()=>{const getChats=async()=>{const response=await fetch(\"/chats/\".concat(user._id),{method:\"POST\",headers:{\"content-type\":\"application/json\"}});if(!response.ok)throw new Error(\"Error Fetching chats\",response);const result=await response.json();setChats(result);};if(user)getChats();},[user]);//get messages\nuseEffect(()=>{const getMessages=async()=>{fetch(\"/messages/\".concat(activeChat._id)).then(response=>response.json()).then(data=>{setMessages(data);}).catch(error=>{console.error(\"Error fetching messages:\",error);});};if(activeChat)getMessages();},[activeChat]);return/*#__PURE__*/_jsx(Center,{width:{base:\"100vw\",xl:\"80vw\"},ml:{base:\"0\",xl:\"10vw\"},children:/*#__PURE__*/_jsxs(HStack,{w:\"100%\",pt:4,justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(VStack,{w:\"30%\",minH:\"calc(100vh - 64px)\",maxH:\"calc(100vh - 64px)\",overflowY:\"hidden\",overflowX:\"hidden\",alignItems:\"flex-start\",justifyContent:\"flex-start\",position:\"relative\",children:[/*#__PURE__*/_jsx(MyDetails,{user:user,cloudinaryUrl:cloudinaryUrl,chats:chats,setChats:setChats,setActiveChat:setActiveChat}),/*#__PURE__*/_jsx(VStack,{w:\"100%\",overflowY:\"auto\",overflowX:\"hidden\",alignItems:\"flex-start\",justifyContent:\"flex-start\",pb:4,children:chats.map(chat=>/*#__PURE__*/_jsx(Box,{onClick:()=>{setActiveChat(chat);setNotifications(prevNotifications=>({...prevNotifications,[chat._id]:0}));socket.emit(\"joinRoom\",chat._id);},w:\"100%\",children:/*#__PURE__*/_jsx(ChatUserList,{chat:chat,connectedUsers:connectedUsers,notification:notifications[chat._id]||0,isActive:activeChat&&activeChat._id===chat._id})},chat._id))}),/*#__PURE__*/_jsx(CreateGroupChatButton,{user:user,setChats:setChats,setActiveChat:setActiveChat,chats:chats})]}),activeChat?/*#__PURE__*/_jsxs(VStack,{w:\"65%\",justifyContent:\"space-between\",maxH:\"calc(100vh - 64px)\",minH:\"calc(100vh - 64px)\",overflow:\"hidden\",position:\"relative\",children:[/*#__PURE__*/_jsx(ChatUserDetails,{activeChat:activeChat,status:activeChat.isGroup?\"\".concat(activeChat.users.length,\" members\"):connectedUsers.includes(activeChat.chatUsers[0]._id)?\"Online\":\"Offline\",cloudinaryUrl:cloudinaryUrl}),/*#__PURE__*/_jsxs(VStack,{w:\"100%\",overflowY:\"auto\",pb:5,overflowX:\"hidden\",ref:messagesContainerRef,children:[messages.map(message=>{var _activeChat$chatUsers,_activeChat$chatUsers2;return message.sender===user._id?/*#__PURE__*/_jsx(SenderMessageBubble,{message:message,sender:activeChat.isGroup?{photo:\"\".concat(cloudinaryUrl,\"/\").concat(user.photo),name:user.name}:null},message._id):/*#__PURE__*/_jsx(ReceiverMessageBubble,{message:message,sender:activeChat.isGroup?{photo:\"\".concat(cloudinaryUrl,\"/\").concat((_activeChat$chatUsers=activeChat.chatUsers.find(user=>user._id===message.sender))===null||_activeChat$chatUsers===void 0?void 0:_activeChat$chatUsers.photo),name:(_activeChat$chatUsers2=activeChat.chatUsers.find(user=>user._id===message.sender))===null||_activeChat$chatUsers2===void 0?void 0:_activeChat$chatUsers2.name}:null},message._id);}),/*#__PURE__*/_jsx(HStack,{position:\"absolute\",bottom:\"50px\",left:0,overflowX:\"auto\",maxW:\"100%\",children:typings[activeChat._id]&&typings[activeChat._id].map((typingUser,index)=>/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(TypingAnimation,{imageUrl:\"\".concat(cloudinaryUrl,\"/\").concat(typingUser.photo),name:typingUser.name})},index))})]}),/*#__PURE__*/_jsx(Spacer,{}),/*#__PURE__*/_jsx(MessageBar,{user:user,activeChat:activeChat,socket:socket,handleChats:handleChats,setMessages:setMessages})]}):null]})});}","map":{"version":3,"names":["Box","Center","HStack","Spacer","VStack","React","useEffect","useRef","useState","ChatUserList","SenderMessageBubble","ReceiverMessageBubble","CreateGroupChatButton","TypingAnimation","ChatUserDetails","MyDetails","MessageBar","jsx","_jsx","jsxs","_jsxs","Feed","_ref","user","socket","cloudinaryUrl","process","env","REACT_APP_CLOUDINARY_URL","chats","setChats","activeChat","setActiveChat","messages","setMessages","connectedUsers","setConnectedUsers","notifications","setNotifications","messagesContainerRef","typings","setTypings","current","scrollTop","scrollHeight","handleChats","newMessage","chatIndex","findIndex","chat","_id","toString","updatedChats","slice","latestMessage","response","fetch","concat","method","headers","Authorization","ok","Error","result","json","prevChats","sender","prevNotifications","error","console","log","handleNotification","chatId","handleNewMessageReceived","prevMessages","on","off","handleConnectedUsers","data","handleTyping","prevTypings","newTypings","index","typingUser","handleStoppedTyping","length","getChats","getMessages","then","catch","width","base","xl","ml","children","w","pt","justifyContent","minH","maxH","overflowY","overflowX","alignItems","position","pb","map","onClick","emit","notification","isActive","overflow","status","isGroup","users","includes","chatUsers","ref","message","_activeChat$chatUsers","_activeChat$chatUsers2","photo","name","find","bottom","left","maxW","imageUrl"],"sources":["/Users/bhavnika/Desktop/We-Chat/client/src/components/Feed.js"],"sourcesContent":["import { Box, Center, HStack, Spacer, VStack } from \"@chakra-ui/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ChatUserList from \"./ChatUserList\";\nimport SenderMessageBubble from \"./SenderMessageBubble\";\nimport ReceiverMessageBubble from \"./ReceiverMessageBubble\";\nimport CreateGroupChatButton from \"./CreateGroupChatButton\";\nimport { TypingAnimation } from \"./commonFunctions\";\nimport ChatUserDetails from \"./ChatUserDetails\";\nimport MyDetails from \"./MyDetails\";\nimport MessageBar from \"./MessageBar\";\n\nexport default function Feed({ user, socket }) {\n  const cloudinaryUrl = process.env.REACT_APP_CLOUDINARY_URL;\n  const [chats, setChats] = useState([]);\n  const [activeChat, setActiveChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [connectedUsers, setConnectedUsers] = useState([]);\n  const [notifications, setNotifications] = useState({});\n  const messagesContainerRef = useRef(null);\n  const [typings, setTypings] = useState({});\n\n  useEffect(() => {\n    // Scroll to the last message when the component mounts or when activeChat changes\n    if (messagesContainerRef.current) {\n      messagesContainerRef.current.scrollTop =\n        messagesContainerRef.current.scrollHeight;\n    }\n  }, [messages, activeChat, cloudinaryUrl, user]);\n\n  const handleChats = async (newMessage) => {\n    let chatIndex = chats.findIndex(\n      (chat) => chat._id === newMessage.chat.toString()\n    );\n\n    if (chatIndex !== -1) {\n      const updatedChats = [\n        chats[chatIndex],\n        ...chats.slice(0, chatIndex),\n        ...chats.slice(chatIndex + 1),\n      ];\n\n      updatedChats[0].latestMessage = newMessage;\n\n      setChats(updatedChats);\n    } else {\n      try {\n        const response = await fetch(`/chat/${newMessage.chat}`, {\n          method: \"POST\",\n          headers: {\n            \"content-type\": \"application/json\",\n            Authorization: user._id,\n          },\n        });\n\n        if (!response.ok)\n          throw new Error(\"Error fetching the chat: \", response);\n\n        const result = await response.json();\n\n        setChats((prevChats) => [result, ...prevChats]);\n        if (newMessage.sender.toString() !== user._id.toString())\n          setNotifications((prevNotifications) => ({\n            ...prevNotifications,\n            [newMessage.chat.toString()]: 1,\n          }));\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handleNotification = (newMessage) => {\n    const chatId = newMessage.chat.toString();\n    const chatIndex = chats.findIndex((chat) => chat._id === chatId);\n\n    if (chatIndex !== -1) {\n      setNotifications((prevNotifications) => ({\n        ...prevNotifications,\n        [chatId]: (prevNotifications[chatId] || 0) + 1,\n      }));\n    }\n  };\n\n  //new message received\n  useEffect(() => {\n    const handleNewMessageReceived = async (newMessage) => {\n      await handleChats(newMessage);\n      if (activeChat && activeChat._id.toString() === newMessage.chat) {\n        setMessages((prevMessages) => [...prevMessages, newMessage]);\n      } else handleNotification(newMessage);\n    };\n\n    socket.on(\"newMessageReceived\", handleNewMessageReceived);\n\n    return () => {\n      socket.off(\"newMessageReceived\", handleNewMessageReceived);\n    };\n  });\n\n  //connected users\n  useEffect(() => {\n    const handleConnectedUsers = (data) => {\n      setConnectedUsers(data);\n    };\n\n    socket.on(\"connectedUsers\", handleConnectedUsers);\n\n    return () => {\n      socket.off(\"connectedUsers\", handleConnectedUsers);\n    };\n  });\n\n  //typing\n  useEffect(() => {\n    const handleTyping = (data) => {\n      setTypings((prevTypings) => {\n        const newTypings = { ...prevTypings };\n\n        if (newTypings[data.chatId]) {\n          const index = newTypings[data.chatId].findIndex(\n            (typingUser) => typingUser._id === data.typingUser._id\n          );\n\n          if (index === -1) {\n            newTypings[data.chatId] = [\n              ...newTypings[data.chatId],\n              data.typingUser,\n            ];\n          } else {\n            newTypings[data.chatId][index] = data.typingUser;\n          }\n        } else {\n          newTypings[data.chatId] = [data.typingUser];\n        }\n\n        return newTypings;\n      });\n    };\n\n    socket.on(\"typing\", handleTyping);\n\n    return () => {\n      socket.off(\"typing\", handleTyping);\n    };\n  });\n\n  //stopped typing\n  useEffect(() => {\n    const handleStoppedTyping = (data) => {\n      setTypings((prevTypings) => {\n        const newTypings = { ...prevTypings };\n\n        if (newTypings[data.chatId]) {\n          const index = newTypings[data.chatId].findIndex(\n            (user) => user._id === data.typingUser._id\n          );\n\n          if (index !== -1) {\n            newTypings[data.chatId] = [\n              ...newTypings[data.chatId].slice(0, index),\n              ...newTypings[data.chatId].slice(index + 1),\n            ];\n\n            if (newTypings[data.chatId].length === 0) {\n              delete newTypings[data.chatId];\n            }\n          }\n        }\n\n        return newTypings;\n      });\n    };\n    socket.on(\"stoppedTyping\", handleStoppedTyping);\n    return () => {\n      socket.off(\"stoppedTyping\", handleStoppedTyping);\n    };\n  });\n\n  //get chats\n  useEffect(() => {\n    const getChats = async () => {\n      const response = await fetch(`/chats/${user._id}`, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) throw new Error(\"Error Fetching chats\", response);\n\n      const result = await response.json();\n\n      setChats(result);\n    };\n\n    if (user) getChats();\n  }, [user]);\n\n  //get messages\n  useEffect(() => {\n    const getMessages = async () => {\n      fetch(`/messages/${activeChat._id}`)\n        .then((response) => response.json())\n        .then((data) => {\n          setMessages(data);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching messages:\", error);\n        });\n    };\n    if (activeChat) getMessages();\n  }, [activeChat]);\n\n  return (\n    <Center\n      width={{ base: \"100vw\", xl: \"80vw\" }}\n      ml={{ base: \"0\", xl: \"10vw\" }}\n    >\n      <HStack w=\"100%\" pt={4} justifyContent={\"space-between\"}>\n        <VStack\n          w=\"30%\"\n          minH=\"calc(100vh - 64px)\"\n          maxH=\"calc(100vh - 64px)\"\n          overflowY=\"hidden\"\n          overflowX=\"hidden\"\n          alignItems={\"flex-start\"}\n          justifyContent={\"flex-start\"}\n          position={\"relative\"}\n        >\n          <MyDetails\n            user={user}\n            cloudinaryUrl={cloudinaryUrl}\n            chats={chats}\n            setChats={setChats}\n            setActiveChat={setActiveChat}\n          />\n\n          <VStack\n            w={\"100%\"}\n            overflowY={\"auto\"}\n            overflowX={\"hidden\"}\n            alignItems={\"flex-start\"}\n            justifyContent={\"flex-start\"}\n            pb={4}\n          >\n            {chats.map((chat) => (\n              <Box\n                key={chat._id}\n                onClick={() => {\n                  setActiveChat(chat);\n                  setNotifications((prevNotifications) => ({\n                    ...prevNotifications,\n                    [chat._id]: 0,\n                  }));\n                  socket.emit(\"joinRoom\", chat._id);\n                }}\n                w={\"100%\"}\n              >\n                <ChatUserList\n                  chat={chat}\n                  connectedUsers={connectedUsers}\n                  notification={notifications[chat._id] || 0}\n                  isActive={activeChat && activeChat._id === chat._id}\n                />\n              </Box>\n            ))}\n          </VStack>\n\n          <CreateGroupChatButton\n            user={user}\n            setChats={setChats}\n            setActiveChat={setActiveChat}\n            chats={chats}\n          />\n        </VStack>\n\n        {activeChat ? (\n          <VStack\n            w=\"65%\"\n            justifyContent={\"space-between\"}\n            maxH=\"calc(100vh - 64px)\"\n            minH=\"calc(100vh - 64px)\"\n            overflow=\"hidden\"\n            position={\"relative\"}\n          >\n            <ChatUserDetails\n              activeChat={activeChat}\n              status={\n                activeChat.isGroup\n                  ? `${activeChat.users.length} members`\n                  : connectedUsers.includes(activeChat.chatUsers[0]._id)\n                  ? \"Online\"\n                  : \"Offline\"\n              }\n              cloudinaryUrl={cloudinaryUrl}\n            />\n\n            <VStack\n              w={\"100%\"}\n              overflowY=\"auto\"\n              pb={5}\n              overflowX={\"hidden\"}\n              ref={messagesContainerRef}\n            >\n              {messages.map((message) =>\n                message.sender === user._id ? (\n                  <SenderMessageBubble\n                    key={message._id}\n                    message={message}\n                    sender={\n                      activeChat.isGroup\n                        ? {\n                            photo: `${cloudinaryUrl}/${user.photo}`,\n                            name: user.name,\n                          }\n                        : null\n                    }\n                  />\n                ) : (\n                  <ReceiverMessageBubble\n                    key={message._id}\n                    message={message}\n                    sender={\n                      activeChat.isGroup\n                        ? {\n                            photo: `${cloudinaryUrl}/${\n                              activeChat.chatUsers.find(\n                                (user) => user._id === message.sender\n                              )?.photo\n                            }`,\n                            name: activeChat.chatUsers.find(\n                              (user) => user._id === message.sender\n                            )?.name,\n                          }\n                        : null\n                    }\n                  />\n                )\n              )}\n              <HStack\n                position={\"absolute\"}\n                bottom={\"50px\"}\n                left={0}\n                overflowX={\"auto\"}\n                maxW={\"100%\"}\n              >\n                {typings[activeChat._id] &&\n                  typings[activeChat._id].map((typingUser, index) => (\n                    <Box key={index}>\n                      <TypingAnimation\n                        imageUrl={`${cloudinaryUrl}/${typingUser.photo}`}\n                        name={typingUser.name}\n                      />\n                    </Box>\n                  ))}\n              </HStack>\n            </VStack>\n            <Spacer />\n\n            <MessageBar\n              user={user}\n              activeChat={activeChat}\n              socket={socket}\n              handleChats={handleChats}\n              setMessages={setMessages}\n            />\n          </VStack>\n        ) : null}\n      </HStack>\n    </Center>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}