{"ast":null,"code":"import React from\"react\";import{Card,Heading,Text,CardBody,Avatar,HStack,Badge,Box}from\"@chakra-ui/react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ChatUserList(_ref){let{chat,isOnline,notification,isActive}=_ref;const cloudinaryUrl=process.env.REACT_APP_CLOUDINARY_URL;const cardStyles={direction:\"row\",variant:\"outline\",height:\"100px\",w:\"100%\",backgroundColor:isActive?\"gray.100\":\"white\",transition:\"border 0.3s\",cursor:\"pointer\",_hover:{boxShadow:isActive?\"none\":\"0 4px 6px rgba(0, 0, 0, 0.1), 0 6px 8px rgba(0, 0, 0, 0.08)\",transition:\"box-shadow 0.3s\"}};const formatText=time=>{const currentDate=new Date();const inputDate=new Date(time);const isSameDay=inputDate.getDate()===currentDate.getDate()&&inputDate.getMonth()===currentDate.getMonth()&&inputDate.getFullYear()===currentDate.getFullYear();const isYesterday=inputDate.getDate()===currentDate.getDate()-1&&inputDate.getMonth()===currentDate.getMonth()&&inputDate.getFullYear()===currentDate.getFullYear();if(isSameDay){// Return the time if it's today\nreturn\"\".concat(inputDate.getHours().toString().padStart(2,\"0\"),\":\").concat(inputDate.getMinutes().toString().padStart(2,\"0\"));}else if(isYesterday){// Return \"Yesterday\" if it's yesterday\nreturn\"Yesterday\";}else{// Return the date in the format dd-mm-yyyy\nconst dd=String(inputDate.getDate()).padStart(2,\"0\");const mm=String(inputDate.getMonth()+1).padStart(2,\"0\");const yyyy=inputDate.getFullYear();return\"\".concat(dd,\"/\").concat(mm,\"/\").concat(yyyy);}};return/*#__PURE__*/_jsx(Box,{as:Card,...cardStyles,children:/*#__PURE__*/_jsxs(HStack,{children:[/*#__PURE__*/_jsxs(Box,{position:\"relative\",children:[/*#__PURE__*/_jsx(Avatar,{src:chat.isGroup?\"\".concat(cloudinaryUrl,\"/\").concat(chat.groupIcon):\"\".concat(cloudinaryUrl,\"/\").concat(chat.chatUsers[0].photo),alt:\"Caffe Latte\",name:chat.isGroup?chat.groupName:chat.chatUsers[0].name}),!chat.isGroup&&isOnline&&/*#__PURE__*/_jsx(Badge,{variant:\"solid\",w:\"10px\",h:\"10px\",borderRadius:\"full\",position:\"absolute\",right:0,bottom:1,colorScheme:\"green\"})]}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(HStack,{children:[/*#__PURE__*/_jsx(Heading,{size:\"sm\",whiteSpace:\"nowrap\",textOverflow:\"ellipsis\",children:chat.isGroup?chat.groupName:chat.chatUsers[0].name}),/*#__PURE__*/_jsx(Text,{style:{height:\"20px\"},fontSize:\"xs\",fontWeight:\"bold\",borderRadius:\"full\",minW:\"10px\",backgroundColor:\"green\",color:\"white\",textAlign:\"center\",position:\"absolute\",right:5,display:notification>0?\"block\":\"none\",px:2,children:notification})]}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",py:\"2\",whiteSpace:\"nowrap\",overflow:\"hidden\",textOverflow:\"ellipsis\",children:chat.latestMessage?chat.latestMessage.content:\"Start Chatting by clicking here\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",position:\"absolute\",bottom:0,right:3,children:formatText(chat.updatedAt)})]})]})});}","map":{"version":3,"names":["React","Card","Heading","Text","CardBody","Avatar","HStack","Badge","Box","jsx","_jsx","jsxs","_jsxs","ChatUserList","_ref","chat","isOnline","notification","isActive","cloudinaryUrl","process","env","REACT_APP_CLOUDINARY_URL","cardStyles","direction","variant","height","w","backgroundColor","transition","cursor","_hover","boxShadow","formatText","time","currentDate","Date","inputDate","isSameDay","getDate","getMonth","getFullYear","isYesterday","concat","getHours","toString","padStart","getMinutes","dd","String","mm","yyyy","as","children","position","src","isGroup","groupIcon","chatUsers","photo","alt","name","groupName","h","borderRadius","right","bottom","colorScheme","size","whiteSpace","textOverflow","style","fontSize","fontWeight","minW","color","textAlign","display","px","py","overflow","latestMessage","content","updatedAt"],"sources":["/Users/bhavnika/Desktop/We-Chat/client/src/components/ChatUserList.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  CardBody,\n  Avatar,\n  HStack,\n  Badge,\n  Box,\n} from \"@chakra-ui/react\";\n\nexport default function ChatUserList({\n  chat,\n  isOnline,\n  notification,\n  isActive,\n}) {\n  const cloudinaryUrl = process.env.REACT_APP_CLOUDINARY_URL;\n\n  const cardStyles = {\n    direction: \"row\",\n    variant: \"outline\",\n    height: \"100px\",\n    w: \"100%\",\n    backgroundColor: isActive ? \"gray.100\" : \"white\",\n    transition: \"border 0.3s\",\n    cursor: \"pointer\",\n    _hover: {\n      boxShadow: isActive\n        ? \"none\"\n        : \"0 4px 6px rgba(0, 0, 0, 0.1), 0 6px 8px rgba(0, 0, 0, 0.08)\",\n      transition: \"box-shadow 0.3s\",\n    },\n  };\n\n  const formatText = (time) => {\n    const currentDate = new Date();\n    const inputDate = new Date(time);\n\n    const isSameDay =\n      inputDate.getDate() === currentDate.getDate() &&\n      inputDate.getMonth() === currentDate.getMonth() &&\n      inputDate.getFullYear() === currentDate.getFullYear();\n\n    const isYesterday =\n      inputDate.getDate() === currentDate.getDate() - 1 &&\n      inputDate.getMonth() === currentDate.getMonth() &&\n      inputDate.getFullYear() === currentDate.getFullYear();\n\n    if (isSameDay) {\n      // Return the time if it's today\n      return `${inputDate.getHours().toString().padStart(2, \"0\")}:${inputDate\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\")}`;\n    } else if (isYesterday) {\n      // Return \"Yesterday\" if it's yesterday\n      return \"Yesterday\";\n    } else {\n      // Return the date in the format dd-mm-yyyy\n      const dd = String(inputDate.getDate()).padStart(2, \"0\");\n      const mm = String(inputDate.getMonth() + 1).padStart(2, \"0\");\n      const yyyy = inputDate.getFullYear();\n      return `${dd}/${mm}/${yyyy}`;\n    }\n  };\n\n  return (\n    <Box as={Card} {...cardStyles}>\n      <HStack>\n        <Box position={\"relative\"}>\n          <Avatar\n            src={\n              chat.isGroup\n                ? `${cloudinaryUrl}/${chat.groupIcon}`\n                : `${cloudinaryUrl}/${chat.chatUsers[0].photo}`\n            }\n            alt=\"Caffe Latte\"\n            name={chat.isGroup ? chat.groupName : chat.chatUsers[0].name}\n          />\n          {!chat.isGroup && isOnline && (\n            <Badge\n              variant=\"solid\"\n              w={\"10px\"}\n              h={\"10px\"}\n              borderRadius={\"full\"}\n              position={\"absolute\"}\n              right={0}\n              bottom={1}\n              colorScheme=\"green\"\n            ></Badge>\n          )}\n        </Box>\n        <CardBody>\n          <HStack>\n            <Heading size=\"sm\" whiteSpace=\"nowrap\" textOverflow=\"ellipsis\">\n              {chat.isGroup ? chat.groupName : chat.chatUsers[0].name}\n            </Heading>\n            <Text\n              style={{ height: \"20px\" }}\n              fontSize={\"xs\"}\n              fontWeight={\"bold\"}\n              borderRadius={\"full\"}\n              minW={\"10px\"}\n              backgroundColor={\"green\"}\n              color={\"white\"}\n              textAlign={\"center\"}\n              position={\"absolute\"}\n              right={5}\n              display={notification > 0 ? \"block\" : \"none\"}\n              px={2}\n            >\n              {notification}\n            </Text>\n          </HStack>\n\n          <Text\n            fontSize={\"sm\"}\n            py=\"2\"\n            whiteSpace=\"nowrap\"\n            overflow=\"hidden\"\n            textOverflow=\"ellipsis\"\n          >\n            {chat.latestMessage\n              ? chat.latestMessage.content\n              : \"Start Chatting by clicking here\"}\n          </Text>\n\n          <Text fontSize={\"xs\"} position={\"absolute\"} bottom={0} right={3}>\n            {formatText(chat.updatedAt)}\n          </Text>\n        </CardBody>\n      </HStack>\n      {/* </Card> */}\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}