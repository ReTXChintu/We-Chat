{"ast":null,"code":"import{AttachmentIcon}from\"@chakra-ui/icons\";import{HStack,IconButton,Input,InputGroup}from\"@chakra-ui/react\";import React,{useEffect,useState}from\"react\";import{FaMicrophone,FaPaperPlane}from\"react-icons/fa\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function MessageBar(_ref){let{user,activeChat,socket,handleChats,setMessages}=_ref;const[typedMessage,setTypedMessage]=useState(\"\");const[typingTimeout,setTypingTimeout]=useState(null);useEffect(()=>{setTypedMessage(\"\");},[activeChat]);const sendMessage=async()=>{try{const response=await fetch(\"/sendMessage\",{method:\"POST\",headers:{\"content-type\":\"application/json\"},body:JSON.stringify({sender:user._id,chatId:activeChat._id,messageText:typedMessage})});if(!response.ok)throw new Error(\"Message Sending Failed\",response);const result=await response.json();setTypedMessage(\"\");socket.emit(\"newMessage\",result);handleChats(result);if(activeChat&&activeChat._id.toString()===result.chat.toString())setMessages(prevMessages=>[...prevMessages,result]);}catch(error){console.log(error);}};return/*#__PURE__*/_jsxs(HStack,{w:\"100%\",backgroundColor:\"white\",pt:4,children:[/*#__PURE__*/_jsx(IconButton,{borderRadius:\"full\",backgroundColor:\"white\",children:/*#__PURE__*/_jsx(AttachmentIcon,{})}),/*#__PURE__*/_jsx(InputGroup,{size:\"md\",children:/*#__PURE__*/_jsx(Input,{pr:\"4.5rem\",type:\"text\",placeholder:\"Enter Message\",value:typedMessage,onChange:e=>{const typedValue=e.target.value;if(typingTimeout){clearTimeout(typingTimeout);}const newTimeout=setTimeout(()=>{socket.emit(\"stoppedTyping\",{userId:user._id,chatId:activeChat._id});},3000);setTypingTimeout(newTimeout);setTypedMessage(typedValue);socket.emit(\"typing\",{userId:user._id,chatId:activeChat._id});}})}),/*#__PURE__*/_jsx(IconButton,{borderRadius:\"full\",onClick:sendMessage,children:/*#__PURE__*/_jsx(FaPaperPlane,{})}),/*#__PURE__*/_jsx(IconButton,{borderRadius:\"full\",backgroundColor:\"white\",children:/*#__PURE__*/_jsx(FaMicrophone,{})})]});}","map":{"version":3,"names":["AttachmentIcon","HStack","IconButton","Input","InputGroup","React","useEffect","useState","FaMicrophone","FaPaperPlane","jsx","_jsx","jsxs","_jsxs","MessageBar","_ref","user","activeChat","socket","handleChats","setMessages","typedMessage","setTypedMessage","typingTimeout","setTypingTimeout","sendMessage","response","fetch","method","headers","body","JSON","stringify","sender","_id","chatId","messageText","ok","Error","result","json","emit","toString","chat","prevMessages","error","console","log","w","backgroundColor","pt","children","borderRadius","size","pr","type","placeholder","value","onChange","e","typedValue","target","clearTimeout","newTimeout","setTimeout","userId","onClick"],"sources":["/Users/bhavnika/Desktop/We-Chat/client/src/components/MessageBar.js"],"sourcesContent":["import { AttachmentIcon } from \"@chakra-ui/icons\";\nimport { HStack, IconButton, Input, InputGroup } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaMicrophone, FaPaperPlane } from \"react-icons/fa\";\n\nexport default function MessageBar({\n  user,\n  activeChat,\n  socket,\n  handleChats,\n  setMessages,\n}) {\n  const [typedMessage, setTypedMessage] = useState(\"\");\n  const [typingTimeout, setTypingTimeout] = useState(null);\n\n  useEffect(() => {\n    setTypedMessage(\"\");\n  }, [activeChat]);\n\n  const sendMessage = async () => {\n    try {\n      const response = await fetch(`/sendMessage`, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          sender: user._id,\n          chatId: activeChat._id,\n          messageText: typedMessage,\n        }),\n      });\n\n      if (!response.ok) throw new Error(\"Message Sending Failed\", response);\n\n      const result = await response.json();\n      setTypedMessage(\"\");\n      socket.emit(\"newMessage\", result);\n      handleChats(result);\n      if (activeChat && activeChat._id.toString() === result.chat.toString())\n        setMessages((prevMessages) => [...prevMessages, result]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <HStack w={\"100%\"} backgroundColor={\"white\"} pt={4}>\n      <IconButton borderRadius={\"full\"} backgroundColor={\"white\"}>\n        <AttachmentIcon />\n      </IconButton>\n      <InputGroup size=\"md\">\n        <Input\n          pr=\"4.5rem\"\n          type=\"text\"\n          placeholder=\"Enter Message\"\n          value={typedMessage}\n          onChange={(e) => {\n            const typedValue = e.target.value;\n\n            if (typingTimeout) {\n              clearTimeout(typingTimeout);\n            }\n\n            const newTimeout = setTimeout(() => {\n              socket.emit(\"stoppedTyping\", {\n                userId: user._id,\n                chatId: activeChat._id,\n              });\n            }, 3000);\n\n            setTypingTimeout(newTimeout);\n\n            setTypedMessage(typedValue);\n            socket.emit(\"typing\", {\n              userId: user._id,\n              chatId: activeChat._id,\n            });\n          }}\n        />\n      </InputGroup>\n      <IconButton borderRadius={\"full\"} onClick={sendMessage}>\n        <FaPaperPlane />\n      </IconButton>\n      <IconButton borderRadius={\"full\"} backgroundColor={\"white\"}>\n        <FaMicrophone />\n      </IconButton>\n    </HStack>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}